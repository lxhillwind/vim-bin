name: Docker Image CI

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'vim tagname to build'
        required: true
        default: 'v7.2'

jobs:

  build:

    runs-on: ubuntu-latest

    steps:
    - name: Checkout repo
      uses: actions/checkout@v2

    - name: Build the Docker image
      run: docker build . --file Dockerfile --build-arg VIM_VERSION=${{ github.event.inputs.version }} --tag vim-build:${{ github.event.inputs.version }}

    - name: Generate artifacts
      run: docker run --rm -i vim-build:${{ github.event.inputs.version }} cat /out/vim-${{ github.event.inputs.version }}.tar.xz > vim-${{ github.event.inputs.version }}.tar.xz

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.event.inputs.version }}
        release_name: Release ${{ github.event.inputs.version }}
        draft: false
        prerelease: false

    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./vim-${{ github.event.inputs.version }}.tar.xz
        asset_name: vim-${{ github.event.inputs.version }}.tar.xz
        asset_content_type: application/x-tar
